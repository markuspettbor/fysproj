Kjetil: Finish up part 1
Markus: Plotte orbits
OTHER GROUP
{
values used by us:
flux_relative: orbit = 2, stepsperorbit = 200 000, mellom t = 1.681 og t = 1.1686, mask = [3]
velocity_relative_one_planet: orbit = 5, stepsperorbit = 5000, mask = [3]
velocity_relative_more_planets: orbit = 50, stepsperorbit = 5000, mask = [2,3,6]
}

Trash:

t0 = 0
M = m[3] + m_star

sun_x0 = np.array([0, 0])
sun_v0 = np.array([0, 0])
planet_x0 = np.array([x0[3], y0[3]])
planet_v0 = np.array([vx0[3], vy0[3]])
cm = m[3]/M*planet_x0 + m_star/M*sun_x0  # Centre of mass

sun_x0 = np.array([0, 0]) - cm
planet_x0 = np.array([x0[3], y0[3]]) - cm

t0 = 0
period = kepler3(m_star, m[3], a[3])
orbits = 2
stepsperorbit = 100000
t1 = orbits*period
steps = orbits*stepsperorbit
time2 = np.linspace(t0, t1, steps)
dt = time2[1] - time2[0]
mass = np.array([m_star, m[3]])

num_bodies = 2

xx = np.zeros((len(time2), num_bodies, 2))
vv = np.zeros((len(time2), num_bodies, 2))
x = np.array([sun_x0, planet_x0])
v = np.array([sun_v0, planet_v0])
xx[0] = np.copy(x)
vv[0] = np.copy(v)
for k in range(len(time2)-1):
    for i in range(num_bodies):
        x = np.copy(xx[k])
        acc = lambda r: system_acceleration(mass, r, i)
        x[i] = xx[k,i] + vv[k,i]*dt + 0.5*acc(xx[k])*dt**2
        v[i] = vv[k,i] + 0.5*(acc(xx[k])+ acc(x))*dt
    vcm = (m[3]/M*x[1] + m_star/M*x[0]-cm)/dt
    cm = m[3]/M*x[1] + m_star/M*x[0]  # Centre of mass
    xx[k+1] = x - cm
    vv[k+1] = v


for i in range(2):
    plt.plot(xx[:,i,:][:,0],xx[:,i,:][:,1])

plt.scatter(cm[0], cm[1])
plt.axis('equal')
plt.show()
